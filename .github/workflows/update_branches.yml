name: Update All Player Branches

on:
  push:
    branches:
      - main

jobs:
  update_s4me_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout S4Me branch
        uses: actions/checkout@v4
        with:
          ref: Player_S4me
          fetch-depth: 0

      - name: Sync from main
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin main
          git merge origin/main --no-edit --allow-unrelated-histories || {
            git checkout --theirs -- S4Me_ricerca.json S4Me_ricerca_0vecchia.json S4Me_ricerca_1337x.json S4Me_ricerca_ilcorsaronero.json
            git add S4Me_ricerca.json S4Me_ricerca_0vecchia.json S4Me_ricerca_1337x.json S4Me_ricerca_ilcorsaronero.json
            git commit -m "Resolved merge conflict for S4Me files"
          }

      - name: Filter S4Me files
        run: |
          # Mantieni solo i file specifici e rimuovi gli altri
          find . -type f -name "*.json" | grep -vE "S4Me_player_|S4me_|S4Me_ricerca(_ilcorsaronero|_1337x|_0vecchia|.json)?" | xargs rm -f
          git add -u
          git commit -m "ðŸ”„ Auto-update S4Me player files from main" --allow-empty
          git push origin Player_S4me

  update_mandrakodi_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Mandrakodi branch
        uses: actions/checkout@v4
        with:
          ref: Player_Mandrakodi
          fetch-depth: 0

      - name: Sync from main
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin main
          git merge origin/main --no-edit --allow-unrelated-histories || echo "Merge skipped"

      - name: Filter Mandrakodi files
        run: |
          # Mantieni solo i file specifici per Mandrakodi
          find . -type f -name "*.json" | grep -vE "MK_player_" | xargs rm -f
          git add -u
          git commit -m "ðŸ”„ Auto-update Mandrakodi player files from main" --allow-empty
          git push origin Player_Mandrakodi

  update_wltv_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout WLTV branch
        uses: actions/checkout@v4
        with:
          ref: Player_Wltv
          fetch-depth: 0

      - name: Sync from main
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin main
          git merge origin/main --no-edit --allow-unrelated-histories || echo "Merge skipped"

      - name: Filter WLTV files
        run: |
          # Mantieni solo i file specifici per WLTV
          find . -type f -name "*.json" | grep -vE "WLTV" | xargs rm -f
          git add -u
          git commit -m "ðŸ”„ Auto-update WLTV player files from main" --allow-empty
          git push origin Player_Wltv

  update_thegroove_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout TheGroove branch
        uses: actions/checkout@v4
        with:
          ref: Player_Thegroove
          fetch-depth: 0

      - name: Sync from main
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin main
          git merge origin/main --no-edit --allow-unrelated-histories || echo "Merge skipped"

      - name: Filter TheGroove files
        run: |
          # Mantieni solo i file specifici per TheGroove
          find . -type f -name "*.json" | grep -vE "TG360_player_" | xargs rm -f
          git add -u
          git commit -m "ðŸ”„ Auto-update TheGroove player files from main" --allow-empty
          git push origin Player_Thegroove

  update_torrent_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Torrent branch
        uses: actions/checkout@v4
        with:
          ref: Player_Torrent
          fetch-depth: 0

      - name: Sync from main
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin main
          git merge origin/main --no-edit --allow-unrelated-histories || echo "Merge skipped"

      - name: Filter Torrent files
        run: |
          # Mantieni solo i file specifici per Torrent
          find . -type f -name "*.json" | grep -vE "elementum" | xargs rm -f
          git add -u
          git commit -m "ðŸ”„ Auto-update Torrent player files from main" --allow-empty
          git push origin Player_Torrent

  update_scrubsv2_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ScrubsV2 branch
        uses: actions/checkout@v4
        with:
          ref: Player_Scrubsv2
          fetch-depth: 0

      - name: Sync from main
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin main
          git merge origin/main --no-edit --allow-unrelated-histories || echo "Merge skipped"

      - name: Filter ScrubsV2 files
        run: |
          # Mantieni solo direct.scrubsv2.json
          find . -type f -name "*.json" -not -name "direct.scrubsv2.json" | xargs rm -f
          git add -u
          git commit -m "ðŸ”„ Auto-update ScrubsV2 player files from main" --allow-empty
          git push origin Player_Scrubsv2
